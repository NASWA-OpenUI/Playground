# Kong/docker-compose.yml
version: '3.8'

services:
  kong-database:
    image: postgres:15
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - kong_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kong-net

  kong-migration:
    image: kong:3.4
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net

  kong:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kong-database
      - kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000" # Kong proxy port
      - "8001:8001" # Kong admin API
      - "8002:8002" # Kong Manager (admin UI)
      - "8443:8443" # Kong proxy SSL port
      - "8444:8444" # Kong admin API SSL port
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - kong-net

  kong-setup:
    image: curlimages/curl:latest
    volumes:
      - ./scripts:/scripts
    depends_on:
      - kong
    command: ["sh", "/scripts/setup.sh"]
    networks:
      - kong-net

networks:
  kong-net:
    driver: bridge

volumes:
  kong_data:

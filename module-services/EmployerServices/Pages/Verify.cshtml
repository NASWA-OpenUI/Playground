@page "/Verify/{claimId}"
@model EmployerServices.Pages.VerifyModel
@{
    ViewData["Title"] = $"NASWA | Employer Services - Verify Claim {Model.Claim?.ClaimReferenceId}";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --light-color: #ecf0f1;
            --text-color: #333;
            --background-color: #f8f9fa;
            --card-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            --hover-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            line-height: 1.6;
            padding-top: 140px;
        }

        /* Header with sophisticated metallic gradient */
        header {
            background: linear-gradient(135deg, #F0F0F0, #E0E0E0, #D8D8D8);
            color: #2c3e50;
            padding: 2rem 0;
            box-shadow: var(--card-shadow);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .logo {
            display: flex;
            align-items: center;
        }

        .logo-icon {
            height: 80px;
            width: auto;
            margin-right: 1rem;
        }

        .logo h1 {
            font-size: 1.8rem;
            margin: 0;
        }

        .logo p {
            font-size: 0.9rem;
            opacity: 0.8;
            margin: 0;
        }

        .nav-link {
            color: #2c3e50;
            text-decoration: none;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }

        .nav-link:hover {
            background-color: rgba(44, 62, 80, 0.1);
        }

        /* Container */
        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 2rem;
        }

        /* Notification Styles */
        .notification {
            margin-bottom: 2rem;
            padding: 1rem 2rem;
            border-radius: 8px;
            box-shadow: var(--card-shadow);
        }

        .notification.error {
            background-color: #f8d7da;
            color: #721c24;
            border-left: 4px solid var(--accent-color);
        }

        .notification.success {
            background-color: #d4edda;
            color: #155724;
            border-left: 4px solid var(--success-color);
        }

        /* Form Container */
        .form-container {
            background: white;
            border-radius: 8px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
        }

        .form-section {
            padding: 2rem;
            border-bottom: 1px solid #f1f3f4;
        }

        .form-section:last-child {
            border-bottom: none;
        }

        .section-title {
            color: var(--primary-color);
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #f1f3f4;
        }

        /* Claimant Info Grid */
        .claimant-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .claimant-item {
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 6px;
            border-left: 4px solid var(--secondary-color);
        }

        .claimant-item strong {
            color: var(--primary-color);
            display: block;
            margin-bottom: 0.25rem;
        }

        /* Comparison Grid */
        .comparison-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-top: 1rem;
        }

        .comparison-side {
            background: white;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
        }

        .claimed-side {
            border-left: 4px solid var(--warning-color);
            background: #fff8f0;
        }

        .verify-side {
            border-left: 4px solid var(--secondary-color);
            background: #f0f9ff;
        }

        .side-title {
            font-weight: 600;
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
        }

        .claimed-side .side-title {
            color: #b8860b;
        }

        .verify-side .side-title {
            color: #1e40af;
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--primary-color);
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .readonly-value {
            font-weight: 500;
            color: #555;
            padding: 0.75rem 0;
            border-bottom: 1px solid #f1f3f4;
        }

        /* Button styles */
        .btn {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s ease;
            margin: 0 0.5rem;
        }

        .btn-primary {
            background-color: var(--success-color);
            color: white;
        }

        .btn-primary:hover {
            background-color: #27ae60;
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
            transform: translateY(-1px);
        }

        .form-actions {
            background: #f8f9fa;
            padding: 2rem;
            text-align: center;
            border-top: 2px solid #f1f3f4;
        }

        .error-state {
            background: white;
            border-radius: 8px;
            padding: 3rem;
            box-shadow: var(--card-shadow);
            text-align: center;
        }

        .error-state h3 {
            color: var(--accent-color);
            margin-bottom: 1rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            body {
                padding-top: 120px;
            }

            .header-container {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .container {
                padding: 1rem;
            }

            .comparison-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .claimant-grid {
                grid-template-columns: 1fr;
            }

            .form-section {
                padding: 1.5rem;
            }

            .btn {
                display: block;
                margin: 0.5rem 0;
            }

            .form-actions {
                padding: 1.5rem;
            }
        }
    </style>
</head>

<body>
    <header>
        <div class="header-container">
            <div class="logo">
                <img src="/static/naswa_logo.png" alt="NASWA Logo" class="logo-icon">
                <div>
                    <h1>Claim Verification</h1>
                    <p>Review and verify employment information for claim @Model.ClaimId</p>
                </div>
            </div>
            <a href="/" class="nav-link">‚Üê Back to Dashboard</a>
        </div>
    </header>

    <div class="container">
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="notification error">
                @Model.ErrorMessage
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
        {
            <div class="notification success">
                @Model.SuccessMessage
            </div>
        }

        @if (Model.Claim != null)
        {
            <form method="post" class="form-container">
                <!-- Claimant Information -->
                <div class="form-section">
                    <h2 class="section-title">üìã Claimant Information</h2>
                    <div class="claimant-grid">
                        <div class="claimant-item">
                            <strong>Name:</strong> @Model.Claim.ClaimantName
                        </div>
                        <div class="claimant-item">
                            <strong>Email:</strong> @Model.Claim.ClaimantEmail
                        </div>
                        <div class="claimant-item">
                            <strong>Phone:</strong> @Model.Claim.ClaimantPhone
                        </div>
                        <div class="claimant-item">
                            <strong>Claim ID:</strong> @Model.Claim.ClaimReferenceId
                        </div>
                    </div>
                </div>

                <!-- Employment Verification -->
                <div class="form-section">
                    <h2 class="section-title">üíº Employment Verification</h2>
                    <div class="comparison-grid">
                        <!-- What Claimant Said -->
                        <div class="comparison-side claimed-side">
                            <h3 class="side-title">üìù What Claimant Reported</h3>
                            
                            <div class="form-group">
                                <label>Start Date:</label>
                                <div class="readonly-value">@Model.Claim.ClaimedStartDate.ToString("MM/dd/yyyy")</div>
                            </div>
                            
                            <div class="form-group">
                                <label>End Date:</label>
                                <div class="readonly-value">@Model.Claim.ClaimedEndDate.ToString("MM/dd/yyyy")</div>
                            </div>
                            
                            <div class="form-group">
                                <label>Annual Wages:</label>
                                <div class="readonly-value">@Model.Claim.ClaimedWages.ToString("C")</div>
                            </div>

                            <div class="form-group">
                                <label>Separation Reason:</label>
                                <div class="readonly-value">@Model.Claim.SeparationReason</div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.Claim.SeparationDetails))
                            {
                                <div class="form-group">
                                    <label>Separation Details:</label>
                                    <div class="readonly-value">@Model.Claim.SeparationDetails</div>
                                </div>
                            }
                        </div>

                        <!-- Employer Verification -->
                        <div class="comparison-side verify-side">
                            <h3 class="side-title">‚úÖ Employer Verification</h3>
                            
                            <div class="form-group">
                                <label for="VerifiedStartDate">Verified Start Date:</label>
                                <input type="date" id="VerifiedStartDate" name="VerifiedStartDate" 
                                       value="@Model.VerifiedStartDate?.ToString("yyyy-MM-dd")" required />
                            </div>
                            
                            <div class="form-group">
                                <label for="VerifiedEndDate">Verified End Date:</label>
                                <input type="date" id="VerifiedEndDate" name="VerifiedEndDate" 
                                       value="@Model.VerifiedEndDate?.ToString("yyyy-MM-dd")" required />
                            </div>
                            
                            <div class="form-group">
                                <label for="VerifiedWages">Verified Annual Wages:</label>
                                <input type="number" id="VerifiedWages" name="VerifiedWages" 
                                       step="0.01" min="0" value="@Model.VerifiedWages" required />
                            </div>

                            <div class="form-group">
                                <label for="SeparationConfirmed">Separation Information Confirmed:</label>
                                <select id="SeparationConfirmed" name="SeparationConfirmed" required>
                                    <option value="">-- Select --</option>
                                    <option value="true" selected="@(Model.SeparationConfirmed == true)">Yes, Confirmed</option>
                                    <option value="false" selected="@(Model.SeparationConfirmed == false)">No, Disputed</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Additional Notes -->
                <div class="form-section">
                    <h2 class="section-title">üìù Verification Notes</h2>
                    <div class="form-group">
                        <label for="VerificationNotes">Additional Notes (optional):</label>
                        <textarea id="VerificationNotes" name="VerificationNotes" rows="4" 
                                  placeholder="Any additional comments about this verification...">@Model.VerificationNotes</textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="VerifiedBy">Verified By:</label>
                        <input type="text" id="VerifiedBy" name="VerifiedBy" 
                               value="@Model.VerifiedBy" placeholder="Your name or employee ID" required />
                    </div>
                </div>

                <!-- Actions -->
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">‚úÖ Submit Verification</button>
                    <a href="/" class="btn btn-secondary">‚ùå Cancel</a>
                </div>
            </form>
        }
        else
        {
            <div class="error-state">
                <h3>Claim Not Found</h3>
                <p>The claim "@Model.ClaimId" could not be found or has already been processed.</p>
                <a href="/" class="btn btn-secondary">‚Üê Back to Dashboard</a>
            </div>
        }
    </div>

<script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const startDateInput = document.getElementById('VerifiedStartDate');
            const endDateInput = document.getElementById('VerifiedEndDate');
            const wagesInput = document.getElementById('VerifiedWages');
            
            // Add client-side validation
            if (form) {
                form.addEventListener('submit', function(e) {
                    const startDate = new Date(startDateInput.value);
                    const endDate = new Date(endDateInput.value);
                    const wages = parseFloat(wagesInput.value);
                    
                    // Validate date range
                    if (startDate >= endDate) {
                        e.preventDefault();
                        alert('End date must be after start date.');
                        endDateInput.focus();
                        return;
                    }
                    
                    // Validate wages
                    if (wages < 0) {
                        e.preventDefault();
                        alert('Wages cannot be negative.');
                        wagesInput.focus();
                        return;
                    }
                    
                    // Show loading state
                    const submitBtn = this.querySelector('button[type="submit"]');
                    submitBtn.disabled = true;
                    submitBtn.textContent = '‚è≥ Submitting...';
                });
                
                // Format wages input
                wagesInput.addEventListener('blur', function() {
                    const value = parseFloat(this.value);
                    if (!isNaN(value)) {
                        this.value = value.toFixed(2);
                    }
                });
                
                // Add visual feedback for form validation
                [startDateInput, endDateInput, wagesInput].forEach(input => {
                    input.addEventListener('input', function() {
                        // Remove any error styling when user starts typing
                        this.style.borderColor = '';
                    });
                });
            }
        });
    </script>
</body>
</html>

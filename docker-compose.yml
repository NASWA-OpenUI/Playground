version: '3.8'

services:
# Update the Kong-related services in the main docker-compose.yml
kong-database:
    image: postgres:15
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - kong_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ui-system-network

  kong-migration:
    image: kong:3.4
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    command: bash -c "kong migrations bootstrap && kong migrations up"
    restart: on-failure
    networks:
      - ui-system-network

  kong:
    build:
      context: ./Kong
      dockerfile: Dockerfile
    depends_on:
      - kong-database
      - kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000" # Kong proxy port
      - "8001:8001" # Kong admin API
      - "8002:8002" # Kong Manager (admin UI)
      - "8443:8443" # Kong proxy SSL port (optional)
      - "8444:8444" # Kong admin API SSL port (optional)
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - ui-system-network

  kong-setup:
    image: curlimages/curl:latest
    volumes:
      - ./Kong/scripts:/scripts
    command: ["sh", "/scripts/setup.sh"]
    depends_on:
      - kong
    networks:
      - ui-system-network

  # Module Services
  claimant-services:
    build: ./Modules/claimant-services
    volumes:
      - ./Modules/claimant-services:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - API_GATEWAY_URL=http://kong:8000
    networks:
      - ui-system-network

  claims-processing:
    build: ./Modules/claims-processing
    volumes:
      - ./Modules/claims-processing:/app
      - /app/node_modules
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - API_GATEWAY_URL=http://kong:8000
    networks:
      - ui-system-network

  employer-services:
    build: ./Modules/employer-services
    volumes:
      - ./Modules/employer-services:/app
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - API_GATEWAY_URL=http://kong:8000
    networks:
      - ui-system-network

  benefits-admin:
    build: ./Modules/benefits-admin
    ports:
      - "3004:3004"
    environment:
      - ASPNETCORE_URLS=http://+:3004
      - API_GATEWAY_URL=http://kong:8000
    networks:
      - ui-system-network

  # Business Rules Engine
  business-rules:
    build: ./business-rules
    ports:
      - "3001:3001"
    volumes:
      - ./business-rules:/app
      - /app/node_modules
    environment:
      - PORT=3001
    networks:
      - ui-system-network

networks:
  ui-system-network:
    driver: bridge

volumes:
  kong_data:
